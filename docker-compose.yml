version: '3.9'

x-base_service: &base_service
  ports:
    - "${WEBUI_PORT:-7860}:7860"
  volumes:
    - &v1
      type: bind
      source: /vat/backups/StableDiffusion/data
      target: /data
    - &v2
      type: bind
      source: ./output
      target: /output
    - type: bind
      source: ./models_on_nvme
      target: /data/models/Stable-diffusion/nvme
    - type: bind
      source: /media/slu/SN850X/SD
      target: /data/models/Stable-diffusion/nvme2
    - type: bind
      source: /media/slu/SN750/SD
      target: /data/models/Stable-diffusion/nvme3
    - type: bind
      source: /media/slu/Solidigm/SD
      target: /data/models/Stable-diffusion/nvme4
    - type: bind
      source: /media/slu/ff8409d4-e33d-4205-bb34-c25e64536456/
      target: /data/models/Stable-diffusion/nvme5
    - type: bind
      source: ./vae_on_nvme
      target: /data/models/VAE/nvme
    - type: bind
      source: /media/slu/SN850X/SD_Lora
      target: /data/models/Lora/sn850x
  stop_signal: SIGKILL
  tty: true
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            device_ids: ['0']
            capabilities: [compute, utility]

name: webui-docker

services:
  download:
    build: ./services/download/
    profiles: ["download"]
    volumes:
      - *v1

  auto: &automatic
    <<: *base_service
    profiles: ["auto"]
    build: ./services/AUTOMATIC1111
    image: sd-auto:71
    environment:
      - CLI_ARGS=--allow-code --xformers --enable-insecure-extension-access --api

  auto2:
    <<: *automatic
    profiles: ["auto"]
    ports:
      - "${WEBUI_PORT:-7870}:7860"
    deploy:
      resources:
        reservations:
          devices:
              - driver: nvidia
                device_ids: ['1']
                capabilities: [compute, utility]

  auto-cpu:
    <<: *automatic
    profiles: ["auto-cpu"]
    deploy: {}
    environment:
      - CLI_ARGS=--no-half --precision full --allow-code --enable-insecure-extension-access --api

  invoke: &invoke
    <<: *base_service
    profiles: ["invoke"]
    build: ./services/invoke/
    image: sd-invoke:30
    environment:
      - PRELOAD=true
      - CLI_ARGS=--xformers

  # invoke-cpu:
  #   <<: *invoke
  #   profiles: ["invoke-cpu"]
  #   environment:
  #     - PRELOAD=true
  #     - CLI_ARGS=--always_use_cpu

  comfy: &comfy
    <<: *base_service
    profiles: ["comfy"]
    build: ./services/comfy/
    image: sd-comfy:6
    ports:
      - "${WEBUI_PORT:-7861}:7860"
    environment:
      - CLI_ARGS=--preview-method=taesd

  comfy2:
    <<: *comfy
    ports:
      - "${WEBUI_PORT:-7862}:7860"
    deploy:
      resources:
        reservations:
          devices:
              - driver: nvidia
                device_ids: ['1']
                capabilities: [compute, utility]

  comfy-cpu:
    <<: *comfy
    profiles: ["comfy-cpu"]
    deploy: {}
    environment:
      - CLI_ARGS=--cpu
